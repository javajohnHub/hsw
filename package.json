{
  "name": "edwards-webdev-monorepo",
  "version": "1.0.0",
  "description": "Edwards Web Development - Professional web development business website",
  "scripts": {
    "copy": "xcopy /E /I /Y frontend\\dist\\edwards-webdev-frontend\\* backend\\public\\",
    "dev": "concurrently \"npm run backend:dev\" \"npm run frontend:dev\"",
    "backend:dev": "cd backend && npm run dev",
    "frontend:dev": "cd frontend && ng serve --host 0.0.0.0 --port 4200",
    "build": "npm run build:backend",
    "build:ci": "npm run build:backend && npm run build:frontend && npm run build:tournament && npm run copy:all",
    "build:all:ci": "npm run build:backend && npm run build:frontend && npm run build:tournament && npm run copy:all",
    "build:backend": "cd backend && npm run build",
  "build:frontend": "cd frontend && npm run build",
  "copy:frontend": "if exist frontend\\dist\\edwards-webdev-frontend (if exist backend\\public rmdir /S /Q backend\\public) & if not exist backend\\public mkdir backend\\public & if exist frontend\\dist\\edwards-webdev-frontend xcopy /E /I /Y frontend\\dist\\edwards-webdev-frontend\\* backend\\public\\",
  "copy:tournament": "powershell -NoProfile -ExecutionPolicy Bypass -Command \"$src='tournament-app/client/dist/retro-never-dies-client'; $dst='backend/public/tournaments'; if(!(Test-Path $src)){Write-Host 'Tournament dist not found:' $src; exit 0}; New-Item -ItemType Directory -Force -Path $dst | Out-Null; Copy-Item -Path ($src + '/*') -Destination $dst -Recurse -Force; Write-Host 'Copied tournaments to' $dst\"",
    "copy:all": "npm run copy:frontend && npm run copy:tournament",
    "build:prod": "node scripts/build-production.js",
    "deploy": "node scripts/deploy-to-server.js",
    "deploy:quick": "node scripts/quick-deploy.js",
    "start:prod": "cd backend && npm run pm2:start",
    "stop:prod": "cd backend && npm run pm2:stop",
    "restart:prod": "cd backend && npm run pm2:restart",
    "health": "curl http://localhost:3000/health",
    "iframe-test": "curl http://localhost:3000/iframe-test",
    "dev:concurrent": "concurrently \"npm run backend:dev\" \"npm run frontend:dev\"",
    "start": "npm-run-all --parallel backend:start frontend:start",
    "backend:start": "cd backend && npm start",
    "backend:build": "cd backend && npm run build",
    "frontend:start": "cd frontend && ng serve --configuration production",
  "frontend:build": "cd frontend && npm run build",
    "install:all": "npm install && cd backend && npm install && cd ../frontend && npm install && cd ../tournament-app && npm run install:all",
    "clean": "rimraf backend/dist frontend/dist edwards-webdev-production.zip production-package.json DEPLOYMENT.md",
    "lint": "cd frontend && ng lint",
    "test:frontend": "cd frontend && ng test",
    "test:backend": "cd backend && npm test",
    "start:all": "pm2 start ecosystem.all.config.js",
    "stop:all": "pm2 stop ecosystem.all.config.js",
    "restart:all": "pm2 restart ecosystem.all.config.js",
    "status:all": "pm2 status",
    "logs:all": "pm2 logs",
    "build:tournament": "cd tournament-app && npm run build",
    "build:all": "npm run build:backend && npm run build:frontend && npm run build:tournament && npm run copy:all",
    "serve:built": "set NODE_ENV=production&& cd backend && npm start",
  "zip": "powershell -NoProfile -ExecutionPolicy Bypass -Command \"$dest='dist-release'; $pkg=Join-Path $dest 'package'; if(Test-Path $dest){Remove-Item -Recurse -Force $dest}; New-Item -ItemType Directory -Force $pkg | Out-Null; New-Item -ItemType Directory -Force (Join-Path $pkg 'backend') | Out-Null; New-Item -ItemType Directory -Force (Join-Path $pkg 'backend/public') | Out-Null; New-Item -ItemType Directory -Force (Join-Path $pkg 'backend/data') | Out-Null; New-Item -ItemType Directory -Force (Join-Path $pkg 'scripts') | Out-Null; if(Test-Path 'backend/dist'){ Copy-Item -Recurse -Force 'backend/dist' (Join-Path $pkg 'backend') }; if(Test-Path 'backend/public'){ Copy-Item -Recurse -Force 'backend/public' (Join-Path $pkg 'backend') }; if(Test-Path 'backend/data'){ Copy-Item -Recurse -Force 'backend/data' (Join-Path $pkg 'backend') }; if(Test-Path 'backend/.env'){ Copy-Item -Force 'backend/.env' (Join-Path $pkg 'backend/.env') }; if(Test-Path 'backend/package.json'){ Copy-Item -Force 'backend/package.json' (Join-Path $pkg 'backend/package.json') }; if(Test-Path 'backend/package-lock.json'){ Copy-Item -Force 'backend/package-lock.json' (Join-Path $pkg 'backend/package-lock.json') }; if(Test-Path 'tournament-app/client/dist/retro-never-dies-client'){ $dstT=Join-Path $pkg 'backend/public/tournaments'; New-Item -ItemType Directory -Force $dstT | Out-Null; Copy-Item -Recurse -Force 'tournament-app/client/dist/retro-never-dies-client/*' $dstT } else { Write-Host 'Note: tournaments client dist not found; skipping.' }; if(Test-Path 'scripts/deploy-server.sh'){ Copy-Item -Force 'scripts/deploy-server.sh' (Join-Path $pkg 'scripts/deploy-server.sh') }; if(Test-Path 'scripts/nginx-site-example.conf'){ Copy-Item -Force 'scripts/nginx-site-example.conf' (Join-Path $pkg 'scripts/nginx-site-example.conf') }; if(Test-Path 'scripts/setup-certbot.sh'){ Copy-Item -Force 'scripts/setup-certbot.sh' (Join-Path $pkg 'scripts/setup-certbot.sh') }; if(Test-Path 'DEPLOYMENT.md'){ Copy-Item -Force 'DEPLOYMENT.md' (Join-Path $pkg 'DEPLOYMENT.md') }; if(-not (Test-Path (Join-Path $pkg 'backend/dist'))){ Write-Error 'Missing backend/dist in package. Build first (npm run build:ci).' }; if(-not (Test-Path (Join-Path $pkg 'backend/package.json'))){ Write-Error 'Missing backend/package.json in package.' }; Compress-Archive -Path (Join-Path $pkg '*') -DestinationPath (Join-Path $dest 'release.zip') -Force\"",
    "release": "npm run build:ci && npm run zip"
  },
  "devDependencies": {
    "archiver": "^6.0.1",
    "concurrently": "^8.2.2",
    "npm-run-all": "^4.1.5",
    "rimraf": "^5.0.5",
    "ssh2": "^1.16.0"
  },
  "keywords": [
    "web-development",
    "business-website",
    "angular",
    "express",
    "typescript",
    "fullstack",
    "edwards-web-development"
  ],
  "author": "Edwards Web Development",
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "dependencies": {
    "compression": "^1.8.1",
    "cors": "^2.8.5",
    "dotenv": "^17.2.1",
    "express": "^5.1.0",
    "express-rate-limit": "^8.0.1",
    "express-validator": "^7.2.1",
    "helmet": "^8.1.0",
    "morgan": "^1.10.1",
    "nodemailer": "^7.0.5"
  }
}
